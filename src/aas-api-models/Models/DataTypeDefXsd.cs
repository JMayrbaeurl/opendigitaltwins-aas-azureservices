/*
 * DotAAS Part 2 | HTTP/REST | Entire API Collection
 *
 * The entire API collection as part of Details of the Asset Administration Shell Part 2
 *
 * OpenAPI spec version: V1.0RC03
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace AAS.API.Models
{ 
        /// <summary>
        /// Gets or Sets DataTypeDefXsd
        /// </summary>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum DataTypeDefXsd
        {
            /// <summary>
            /// Enum NonNegativeIntegerEnum for xs:NonNegativeInteger
            /// </summary>
            [EnumMember(Value = "xs:NonNegativeInteger")]
            NonNegativeIntegerEnum = 0,
            /// <summary>
            /// Enum AnyURIEnum for xs:anyURI
            /// </summary>
            [EnumMember(Value = "xs:anyURI")]
            AnyURIEnum = 1,
            /// <summary>
            /// Enum Base64BinaryEnum for xs:base64Binary
            /// </summary>
            [EnumMember(Value = "xs:base64Binary")]
            Base64BinaryEnum = 2,
            /// <summary>
            /// Enum BooleanEnum for xs:boolean
            /// </summary>
            [EnumMember(Value = "xs:boolean")]
            BooleanEnum = 3,
            /// <summary>
            /// Enum ByteEnum for xs:byte
            /// </summary>
            [EnumMember(Value = "xs:byte")]
            ByteEnum = 4,
            /// <summary>
            /// Enum DateEnum for xs:date
            /// </summary>
            [EnumMember(Value = "xs:date")]
            DateEnum = 5,
            /// <summary>
            /// Enum DateTimeEnum for xs:dateTime
            /// </summary>
            [EnumMember(Value = "xs:dateTime")]
            DateTimeEnum = 6,
            /// <summary>
            /// Enum DateTimeStampEnum for xs:dateTimeStamp
            /// </summary>
            [EnumMember(Value = "xs:dateTimeStamp")]
            DateTimeStampEnum = 7,
            /// <summary>
            /// Enum DayTimeDurationEnum for xs:dayTimeDuration
            /// </summary>
            [EnumMember(Value = "xs:dayTimeDuration")]
            DayTimeDurationEnum = 8,
            /// <summary>
            /// Enum DecimalEnum for xs:decimal
            /// </summary>
            [EnumMember(Value = "xs:decimal")]
            DecimalEnum = 9,
            /// <summary>
            /// Enum DoubleEnum for xs:double
            /// </summary>
            [EnumMember(Value = "xs:double")]
            DoubleEnum = 10,
            /// <summary>
            /// Enum DurationEnum for xs:duration
            /// </summary>
            [EnumMember(Value = "xs:duration")]
            DurationEnum = 11,
            /// <summary>
            /// Enum FloatEnum for xs:float
            /// </summary>
            [EnumMember(Value = "xs:float")]
            FloatEnum = 12,
            /// <summary>
            /// Enum GDayEnum for xs:gDay
            /// </summary>
            [EnumMember(Value = "xs:gDay")]
            GDayEnum = 13,
            /// <summary>
            /// Enum GMonthEnum for xs:gMonth
            /// </summary>
            [EnumMember(Value = "xs:gMonth")]
            GMonthEnum = 14,
            /// <summary>
            /// Enum GMonthDayEnum for xs:gMonthDay
            /// </summary>
            [EnumMember(Value = "xs:gMonthDay")]
            GMonthDayEnum = 15,
            /// <summary>
            /// Enum GYearEnum for xs:gYear
            /// </summary>
            [EnumMember(Value = "xs:gYear")]
            GYearEnum = 16,
            /// <summary>
            /// Enum GYearMonthEnum for xs:gYearMonth
            /// </summary>
            [EnumMember(Value = "xs:gYearMonth")]
            GYearMonthEnum = 17,
            /// <summary>
            /// Enum HexBinaryEnum for xs:hexBinary
            /// </summary>
            [EnumMember(Value = "xs:hexBinary")]
            HexBinaryEnum = 18,
            /// <summary>
            /// Enum IntEnum for xs:int
            /// </summary>
            [EnumMember(Value = "xs:int")]
            IntEnum = 19,
            /// <summary>
            /// Enum IntegerEnum for xs:integer
            /// </summary>
            [EnumMember(Value = "xs:integer")]
            IntegerEnum = 20,
            /// <summary>
            /// Enum LongEnum for xs:long
            /// </summary>
            [EnumMember(Value = "xs:long")]
            LongEnum = 21,
            /// <summary>
            /// Enum NegativeIntegerEnum for xs:negativeInteger
            /// </summary>
            [EnumMember(Value = "xs:negativeInteger")]
            NegativeIntegerEnum = 22,
            /// <summary>
            /// Enum NonPositiveIntegerEnum for xs:nonPositiveInteger
            /// </summary>
            [EnumMember(Value = "xs:nonPositiveInteger")]
            NonPositiveIntegerEnum = 23,
            /// <summary>
            /// Enum PositiveIntegerEnum for xs:positiveInteger
            /// </summary>
            [EnumMember(Value = "xs:positiveInteger")]
            PositiveIntegerEnum = 24,
            /// <summary>
            /// Enum ShortEnum for xs:short
            /// </summary>
            [EnumMember(Value = "xs:short")]
            ShortEnum = 25,
            /// <summary>
            /// Enum StringEnum for xs:string
            /// </summary>
            [EnumMember(Value = "xs:string")]
            StringEnum = 26,
            /// <summary>
            /// Enum TimeEnum for xs:time
            /// </summary>
            [EnumMember(Value = "xs:time")]
            TimeEnum = 27,
            /// <summary>
            /// Enum UnsignedByteEnum for xs:unsignedByte
            /// </summary>
            [EnumMember(Value = "xs:unsignedByte")]
            UnsignedByteEnum = 28,
            /// <summary>
            /// Enum UnsignedIntEnum for xs:unsignedInt
            /// </summary>
            [EnumMember(Value = "xs:unsignedInt")]
            UnsignedIntEnum = 29,
            /// <summary>
            /// Enum UnsignedLongEnum for xs:unsignedLong
            /// </summary>
            [EnumMember(Value = "xs:unsignedLong")]
            UnsignedLongEnum = 30,
            /// <summary>
            /// Enum UnsignedShortEnum for xs:unsignedShort
            /// </summary>
            [EnumMember(Value = "xs:unsignedShort")]
            UnsignedShortEnum = 31,
            /// <summary>
            /// Enum YearMonthDurationEnum for xs:yearMonthDuration
            /// </summary>
            [EnumMember(Value = "xs:yearMonthDuration")]
            YearMonthDurationEnum = 32        }
}
